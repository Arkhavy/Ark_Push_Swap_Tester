Rajouter les tests de parsing "4 62" "87 52" etc -> retour erreur

Fix l'affichage du barème concernant les prérequis de chaque test

Optimiser les boucles pour en avoir un code plus intéressant que des répétitions

Rajouter un flag pour activer ou désactiver le parsing (-p)
Rajouter un flag pour les optionnels (-o)
Rajouter un flag pour small (3 5) (-s)
Rajouter un flag pour medium (100) (-m)
Rajouter un flag pour large (500) (-l)

exemples :
-p remove parsing

-s 3 5
-fs 3 4 5 6 7 8 9

-m 100
-fm 10 25 50 75 100

-l 500
-fl 200 300 400 500

Si aucun flag, exécuter TOUS LES TESTS

Rajouter une trace affichant la combinaison foirée et le nombre d'intruction
	Annoncer la création de la trace et donner son nom et path

Rajouter des stats concernant la moyenne, le meilleur et le pire cas pour chaque type de test
	Afficher dans la trace et aussi dans le terminal à la fin du programme au dessus du barème

Rajouter un test pour timeout, segfault, leaks, crash etc
	marquage TO, SEGV, LKO, CRASH dans le barème

Rajouter un test pour la norme de chaque fichier
	liste de OK ou KO avec le nom du fichier à côté (push_swap.c : KO)

Le testeur doit pouvoir fonctionner sur d'autres OS (Linux, Windows, Mac)
	might need some help on this one

Réécriture du script probable

3	- 6		tests - le 3
4	- 24	tests - le 7
5	- 120	tests - le 12
6	- 720	tests - le 26
7	- 500	tests - le	50
8	- 500	tests - le	70
9	- 500	tests - le	85
10	- 500	tests - le	100
25	- 500	tests - le 	250
50	- 500	tests - le	350
75	- 500	tests - le	525
100	- 500	tests - lt	700		900		1100	1300	1500
200	- 500	tests - lt	1250	1600	1950	2350	2700
300	- 500	tests - lt	2650	3400	4150	4950	5700
400	- 500	tests - lt	4000	5200	6350	7550	8700
500	- 500	tests - lt	5500	7000	8500	10000	11500